{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,qBACjCE,EAASH,SAASC,cAAc,oBAChCG,EAAWJ,SAASC,cAAc,sBAwBxC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,qBAAoCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAElDM,EAAO,oBAAmCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEjDA,E,IAGFS,MAAK,SAAAC,GACJpB,EAAAqB,OAAOC,QAAQF,E,IAEhBG,OAAM,SAAAC,GACLxB,EAAAqB,OAAOI,QAAQD,E,IAvCrBtB,EAAOwB,iBAAiB,UAExB,SAAkBC,GAEhB,GADAA,EAAIC,iBAEFC,OAAOxB,EAAQe,OAAS,GACxBS,OAAOvB,EAAOc,OAAS,GACvBS,OAAOtB,EAASa,OAAS,EAGzB,YADApB,EAAAqB,OAAOS,QAAQ,4BAMjB,IAHA,IAAIrB,EAAW,EACXsB,EAAO,EACPrB,EAAQmB,OAAOxB,EAAQe,OAClBY,EAAI,EAAGA,GAAKzB,EAASa,MAAOY,GAAK,EACxCvB,GAAY,EACZsB,GAAQF,OAAOvB,EAAOc,OACtBZ,EAAcC,EAAUC,GACxBA,EAAQmB,OAAOxB,EAAQe,OAASW,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('input[name=delay]');\nconst stepEl = document.querySelector('input[name=step]');\nconst amountEl = document.querySelector('input[name=amount]');\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  if (\n    Number(delayEl.value) < 0 ||\n    Number(stepEl.value) < 0 ||\n    Number(amountEl.value) < 0\n  ) {\n    Notify.warning('Value cannot be negative');\n    return;\n  }\n  let position = 0;\n  let step = 0;\n  let delay = Number(delayEl.value);\n  for (let i = 1; i <= amountEl.value; i += 1) {\n    position += 1;\n    step += Number(stepEl.value);\n    createPromise(position, delay);\n    delay = Number(delayEl.value) + step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  promise\n    .then(value => {\n      Notify.success(value);\n    })\n    .catch(err => {\n      Notify.failure(err);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","then","value","Notify","success","catch","err","failure","addEventListener","evt","preventDefault","Number","warning","step","i"],"version":3,"file":"03-promises.bbb4fcd1.js.map"}